---
replicas: 1

image: 'ghcr.io/csquare-ai/rittal-exporter:0.1.0'
imagePullPolicy: 'IfNotPresent'

podAnnotations: {}

# additionals labels
labels: {}

resources:
  requests:
    cpu: '50m'
    memory: '64Mi'
  limits:
    cpu: '250m'
    memory: '128Mi'

# This is the node affinity settings as defined in
# https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-affinity-beta-feature
nodeAffinity: {}

service:
  labels: {}
  type: ClusterIP
  port: 8123

serviceMonitor:
  enabled: true
  namespace: monitoring

  labels: {}

  path: /

  # fallback to the prometheus default unless specified
  # interval: 10s
  scrapeTimeout: 10s
  # relabelings: []

updateStrategy: RollingUpdate

podSecurityContext:
  fsGroup: 1000
  runAsUser: 1000

securityContext:
  capabilities:
    drop:
      - ALL
  # readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

# How long to wait for elasticsearch to stop gracefully
terminationGracePeriod: 10

readinessProbe:
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  successThreshold: 3
  timeoutSeconds: 5

livenessProbe:
  failureThreshold: 3
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 5

## Use an alternate scheduler.
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
schedulerName: ''

imagePullSecrets: []
nodeSelector: {}
tolerations: []

config:
  bindings:
    []
    # - socket: 1
    #   node: cn1
    # - socket: 2
    #   node: cn2
    # - socket: 9
    #   node: cn3
    # - socket: 10
    #   node: cn4
    # - socket: 11
    #   node: cn5
    # - socket: 12
    #   node: cn6
    # - socket: 19
    #   node: cn7
    # - socket: 20
    #   node: cn8
    # - socket: 21
    #   node: cn9
    # - socket: 22
    #   node: cn10
    # - socket: 29
    #   node: cn11
    # - socket: 30
    #   node: cn12

env:
  PROMETHEUS_URL: http://prometheus-kube-prometheus-prometheus.monitoring.svc:9090/
  UPDATE_PERIOD_S: '30'
